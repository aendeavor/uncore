name: Code-Related Tests

on: [ push, pull_request ]

defaults:
  run:
    shell: bash

env:
  TOOLCHAIN: nightly-2020-11-09

jobs:
  dependency_setup:
    name: Setup All Dependencies
    runs-on: ubuntu-20.04
    steps:
      - name: Installing Rustup
        run: curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
      - name: Installing Toolchain
        run: rustup toolchain install ${{ env.TOOLCHAIN }}
      
      - name: Installing Rustup Components
        run: rustup component add clippy rls rustfmt llvm-tools-preview
      - name: Install Cargo Components
        run: cargo install cargo-xbuild bootimage

  formatting_check:
    name: Run Formatting-Tests
    runs-on: ubuntu-20.04
    needs: dependency_setup
    steps:
      - uses: actions/checkout@v2
      - name: Setting up Toolchain
        run: rustup override set ${{ env.TOOLCHAIN }}
      - name: Running Formatting Check
        run: cargo fmt -- --check

  clippy_check:
    name: Run Clippy-Tests
    runs-on: ubuntu-20.04
    needs: dependency_setup
    steps:
      - uses: actions/checkout@v2
      - name: Setting up Toolchain
        run: rustup override set ${{ env.TOOLCHAIN }}
      - name: Running Formatting Check
        run: cargo fmt -- --check
      - name: Running Clippy Check
        run: cargo clippy --all-targets --all-features -- -D warnings
  
  ui_check:
    name: Run Unit- & Integration-Tests
    runs-on: ubuntu-20.04
    needs: dependency_setup
    steps:
      - name: Setting up QEMU (1/2)
        run: >
          sudo apt-get -qq --fix-missing update &&
          sudo apt-get -qq -y --no-install-recommends install
          qemu-system-x86 &>/dev/null
      - name: Setting up QEMU (2/2)
        uses: docker/setup-qemu-action@v1
        with:
          image: tonistiigi/binfmt:latest
          platforms: amd64

      - uses: actions/checkout@v2
      - name: Setting up Toolchain
        run: rustup override set ${{ env.TOOLCHAIN }}
      - name: Running Unit- & Integration-Tests
        run: cargo test
